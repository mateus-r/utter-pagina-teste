{"version":3,"sources":["components/MenuLateral.tsx","components/fields/CamposAluno.tsx","components/fields/CamposPessoa.tsx","api/index.ts","pages/Alunos/CadastrarAluno/actions.ts","pages/Alunos/CadastrarAluno/index.tsx","utils/masks.ts","pages/Alunos/ProcurarAluno/actions.ts","pages/Alunos/ProcurarAluno/columns.tsx","pages/Alunos/Detalhes/actions.ts","pages/Alunos/Detalhes/index.tsx","pages/Alunos/ProcurarAluno/index.tsx","pages/Alunos/index.tsx","pages/Financas/TabelaFinancas/actions.ts","pages/Financas/TabelaFinancas/index.tsx","pages/Financas/TabelaFinancas/columns.tsx","pages/Financas/TabelaMensalidades/index.tsx","pages/Financas/index.tsx","pages/Home.tsx","pages/Exercicios/TabelaExercios/columns.ts","pages/Exercicios/TabelaExercios/actions.ts","pages/Exercicios/TabelaExercios/index.tsx","components/fields/CamposExercicio.tsx","pages/Exercicios/Cadastrar/actions.ts","pages/Exercicios/Cadastrar/index.tsx","pages/Exercicios/index.tsx","pages/Gerenciamento/GruposMusculares/actions.ts","pages/Gerenciamento/GruposMusculares/ModalGrupoMuscular/actions.ts","pages/Gerenciamento/GruposMusculares/ModalGrupoMuscular/index.tsx","pages/Gerenciamento/GruposMusculares/index.tsx","pages/Gerenciamento/GruposMusculares/columns.ts","pages/Gerenciamento/index.tsx","components/Conteudo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MenuLateral","mode","theme","inlineIndent","Item","to","CamposAluno","name","label","rules","required","rows","Group","value","CamposPessoa","type","axios","require","endpointAlunos","create","baseURL","defaults","headers","post","endpointExercicios","endpointFinancas","cadastrarAluno","values","Observable","doCadastrarAluno","toPromise","a","result","CadastrarAluno","useForm","form","onFinish","then","resetFields","message","success","catch","error","response","console","log","data","request","config","style","width","span","htmlType","mascaraCpf","replace","mascaraTelefone","length","carregarTabela","doCarregarTabela","get","map","r","cpf","nome","telefone","segundoTelefone","procurarAlunos","param","doProcurarAluno","carregarDadosAluno","doCarregarDadosAluno","Detalhes","props","React","loading","setLoading","aluno","setAluno","resposta","erro","spinning","visible","modalVisible","title","toUpperCase","onCancel","showModal","bordered","alergia","atividadeFisica","bairro","cep","cidade","cirurgia","complemento","dieta","doencaFamilia","doencaPessoal","dorNoCorpo","dtNascimento","email","endereco","etnia","fumante","medicamento","objetivo","observacoes","osteomuscular","outro","responsavel","restricao","rg","sexo","uf","Search","ProcurarAluno","useState","listaAlunos","setListaAlunos","setModalVisible","selectedCpf","setSelectedCpf","useEffect","finally","placeholder","onSearch","enterButton","onRow","record","onClick","dataSource","columns","dataIndex","key","align","rowKey","TabPane","Alunos","tab","id","descricao","tipo","valor","status","TabelaFinancas","setDataSource","contrato","vencimento","TabelaMensalidades","labels","datasets","backgroundColor","hoverBackgroundColor","Home","grupoMuscular","TabelaExercicios","listaExercicio","setListaExercicio","Option","TextArea","CamposExercicio","defaultValue","cadastrarExercicio","doCadastrarExercicio","CadastrarExercio","Exercicios","carregarGruposMusculares","doCarregarGruposMusculares","salvaGrupoMuscular","doSalvaGrupoMuscular","ModalGrupoMuscular","textoBotao","setTextoBotao","GruposMusculares","gruposMusculares","setGruposMusculares","setId","setNome","idValue","nomeValue","Gerenciamento","Conteudo","className","alignItems","justifyContent","exact","path","render","Content","Sider","App","overflow","height","position","left","marginLeft","padding","margin","minHeight","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60e784cb.chunk.js","sourcesContent":["import { Menu } from \"antd\";\nimport * as React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport const MenuLateral = () => {\n    return (\n        <Menu\n            mode=\"inline\"\n            theme=\"dark\"\n            inlineIndent={0}\n        >\n            <Menu.Item>\n                <span>Home</span>\n                <Link to=\"/\" />\n            </Menu.Item>\n            <Menu.Item>\n                <span>Alunos</span>\n                <Link to=\"/alunos\" />\n            </Menu.Item>\n            <Menu.Item>\n                <span>Finanças</span>\n                <Link to=\"/financas\" />\n            </Menu.Item>\n            <Menu.Item>\n                <span>Exercícios</span>\n                <Link to=\"/exercicios\" />\n            </Menu.Item>\n            <Menu.Item>\n                <span>Gerenciamento</span>\n                <Link to=\"/gerenciamento\" />\n            </Menu.Item>\n        </Menu>\n    );\n}","import { Form, Input, Radio } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport React from 'react';\n\nexport default function CamposAluno() {\n    return (\n        <>\n            <Form.Item name=\"responsavel\" label=\"Responsável\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"etnia\" label=\"Etnia\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"observacoes\" label=\"Observacoes\">\n                <TextArea rows={3} />\n            </Form.Item>\n            <Form.Item name=\"doencaFamilia\" label=\"Doença na família\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"doencaPessoal\" label=\"Doença pessoal\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"restricao\" label=\"Restrição\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"cirurgia\" label=\"Cirurgia\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"alergia\" label=\"Alergia\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"osteomuscular\" label=\"Osteomuscular\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"medicamento\" label=\"Medicamento\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"dorNoCorpo\" label=\"Dor no Corpo\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"fumante\" label=\"Fumante\">\n                <Radio.Group>\n                    <Radio value=\"true\">Sim</Radio>\n                    <Radio value=\"false\">Não</Radio>\n                </Radio.Group>\n            </Form.Item>\n            <Form.Item name=\"dieta\" label=\"Dieta\">\n                <TextArea rows={3} />\n            </Form.Item>\n            <Form.Item name=\"atividadeFisica\" label=\"Atividade Física\">\n                <TextArea rows={3} />\n            </Form.Item>\n            <Form.Item name=\"outro\" label=\"Outro\">\n                <TextArea rows={3} />\n            </Form.Item>\n            <Form.Item name=\"objetivo\" label=\"Objetivo\">\n                <Input />\n            </Form.Item>\n        </>\n    );\n}","import { DatePicker, Form, Input, Radio } from 'antd';\nimport React from 'react';\n\nexport default function CamposPessoa() {\n    return (\n        <>\n            <Form.Item name=\"nome\" label=\"Nome\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"dtNascimento\" label=\"Data de nascimento\" rules={[{ required: true }]}>\n                <DatePicker />\n            </Form.Item>\n            <Form.Item name=\"sexo\" label=\"Sexo\" rules={[{ required: true }]}>\n                <Radio.Group>\n                    <Radio value=\"f\">Feminino</Radio>\n                    <Radio value=\"m\">Masculino</Radio>\n                </Radio.Group>\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"E-mail\" rules={[{ required: true, type: \"email\" }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"rg\" label=\"RG\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"cpf\" label=\"CPF\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"endereco\" label=\"Endereço\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"bairro\" label=\"Bairro\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"complemento\" label=\"Complemento\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"cidade\" label=\"Cidade\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"uf\" label=\"UF\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"cep\" label=\"CEP\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"telefone\" label=\"Telefone\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"segundo_telefone\" label=\"Telefone adicional\">\n                <Input />\n            </Form.Item>\n        </>\n    )\n}","const axios = require('axios');\n\nexport const endpointAlunos = axios.create({\n    baseURL: 'http://localhost:8080/aluno'\n});\nendpointAlunos.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const endpointExercicios = axios.create({\n    baseURL: 'http://localhost:8080/exercicio'\n});\n\nexport const endpointFinancas = axios.create({\n    baseURL: 'http://localhost:8080/movimentos'\n});","import * as Observable from 'rxjs';\r\nimport { endpointAlunos } from 'api';\r\n\r\nexport function cadastrarAluno(values: any) {\r\n    return Observable.defer(() => doCadastrarAluno(values)).toPromise();\r\n}\r\n\r\nasync function doCadastrarAluno(values: any) {\r\n    const result = await endpointAlunos.post('', values);\r\n    return result;\r\n}","import { Form, Col, Row, Button, message } from \"antd\";\nimport React from 'react';\nimport CamposAluno from \"../../../components/fields/CamposAluno\";\nimport CamposPessoa from \"../../../components/fields/CamposPessoa\";\nimport { cadastrarAluno } from \"./actions\";\n\nexport const CadastrarAluno = () => {\n    const [ form ] = Form.useForm();\n\n    const onFinish = (values: any) => {\n        cadastrarAluno(values)\n        .then( () => {\n            form.resetFields();\n            message.success(\"Cadastro realizado com sucesso.\")\n        })\n        .catch( (error: { response: { data: string; status: any; headers: any; }; request: any; message: any; config: any; }) => {\n            if (error.response) {\n                console.log(error.response.data);\n                message.error(\"Erro. \" + error.response.data);\n              } else if (error.request) {\n                console.log(error.request);\n                message.error(\"Erro inesperado.\");\n              } else {\n                console.log('Error', error.message);\n                message.error(\"Erro inesperado.\");\n              }\n              console.log(error.config);\n        });\n    }\n\n    return (\n        <Form\n            onFinish={onFinish}\n            style={{ width: \"100%\" }}\n        >\n            <Row>\n                <Col span={12}>\n                    <CamposPessoa />\n                </Col>\n                <Col span={12}>\n                    <CamposAluno />\n                </Col>\n            </Row>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Cadastrar\n            </Button>\n        </Form >\n    );\n}","export const mascaraCpf = (value: string) => {\r\n  return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{1,2})/, '$1.$2.$3-$4');\r\n}\r\n\r\nexport const removeMascaraCpf = (value: string) => {\r\n  return value.replace(/(\\.)|(-)/g, '');\r\n}\r\n\r\nexport const mascaraTelefone = (value: string | null) => {\r\n  if(value == null) {\r\n    return \"\";\r\n  }\r\n  \r\n  if(value.length === 11) {\r\n    return value.replace(/(\\d{2})(\\d{5})(\\d{4})/, '($1)$2-$3');\r\n  } else if (value.length === 10) {\r\n    return value.replace(/(\\d{2})(\\d{4})(\\d{4})/, '($1)$2-$3');\r\n  }\r\n  return value;\r\n}","import { endpointAlunos } from '../../../api';\r\nimport * as Observable from 'rxjs';\r\nimport { mascaraCpf, mascaraTelefone } from 'utils/masks';\r\n\r\nexport interface ListaAlunos {\r\n    cpf: string;\r\n    nome: string;\r\n    telefone: string;\r\n    segundoTelefone: string;\r\n}\r\n\r\nexport function carregarTabela() {\r\n    return Observable.defer(() => doCarregarTabela()).toPromise();\r\n}\r\n\r\nasync function doCarregarTabela() {\r\n    const result = await endpointAlunos.get('/listar');\r\n    return result.data.map(( r: ListaAlunos ) => {\r\n        return {\r\n            cpf: mascaraCpf(r.cpf),\r\n            nome: r.nome,\r\n            telefone: mascaraTelefone(r.telefone),\r\n            segundoTelefone: mascaraTelefone(r.segundoTelefone),\r\n        } as ListaAlunos;\r\n    }) as ListaAlunos[];\r\n}\r\n\r\nexport function procurarAlunos(param: string) {\r\n    return Observable.defer(() => doProcurarAluno(param)).toPromise();\r\n}\r\n\r\nasync function doProcurarAluno(param: string) {\r\n    const result = await endpointAlunos.post('/listar', param);\r\n    return result.data.map(( r: ListaAlunos ) => {\r\n        return {\r\n            cpf: mascaraCpf(r.cpf),\r\n            nome: r.nome,\r\n            telefone: mascaraTelefone(r.telefone),\r\n            segundoTelefone: mascaraTelefone(r.segundoTelefone),\r\n        } as ListaAlunos;\r\n    }) as ListaAlunos[];\r\n}","import { ColumnProps } from \"antd/lib/table\";\r\n\r\nexport const ColunasPesquisa: () => ColumnProps<any>[] = () => {\r\n    return [\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n            key: 'nome',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n            key: 'telefone',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'Telefone(2)',\r\n            dataIndex: 'segundoTelefone',\r\n            key: 'segundoTelefone',\r\n            align: 'center',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n            key: 'cpf',\r\n            align: 'center',\r\n        },\r\n    ]\r\n}","import * as Observable from 'rxjs';\r\nimport { endpointAlunos } from 'api';\r\nimport { Aluno } from 'models/Aluno';\r\n\r\nexport function carregarDadosAluno(cpf: string) {\r\n    return Observable.defer(() => doCarregarDadosAluno(cpf)).toPromise();\r\n}\r\n\r\nasync function doCarregarDadosAluno(cpf: string) {\r\n    const result = await endpointAlunos.get('/' + cpf);\r\n    return result.data as Aluno;\r\n}","import * as React from 'react';\r\nimport { Descriptions, message, Spin, Modal } from 'antd';\r\nimport { Aluno } from 'models/Aluno';\r\nimport { carregarDadosAluno } from './actions';\r\nimport { removeMascaraCpf } from 'utils/masks';\r\n\r\ninterface InjectedProps {\r\n    showModal: (visible: boolean) => void;\r\n    modalVisible: boolean;\r\n    cpf: string;\r\n}\r\n\r\nexport const Detalhes = (props: InjectedProps) => {\r\n    const [loading, setLoading] = React.useState<boolean>(false);\r\n    const [aluno, setAluno] = React.useState<Aluno>();\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true);\r\n        if(props.cpf) {\r\n            carregarDadosAluno(removeMascaraCpf(props.cpf))\r\n            .then((resposta) => {\r\n                setAluno(resposta);\r\n            })\r\n            .catch((erro) => {\r\n                message.error(\"Erro ao carregar dados do aluno.\");\r\n            });\r\n        }\r\n        setLoading(false);\r\n    }, [props.cpf])\r\n\r\n    return (\r\n        <Spin spinning={loading}>\r\n            <Modal\r\n                visible={props.modalVisible}\r\n                title={aluno?.nome?.toUpperCase()}\r\n                onCancel={() => props.showModal(false)}\r\n            >\r\n                <Descriptions\r\n                    title={aluno?.nome}\r\n                    bordered>\r\n                    <Descriptions.Item label=\"Alergia\">{aluno?.alergia}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Atividade Física\">{aluno?.atividadeFisica}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Bairro\">{aluno?.bairro}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"CEP\">{aluno?.cep}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Cidade\">{aluno?.cidade}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Cirurgia\">{aluno?.cirurgia}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Complemento\">{aluno?.complemento}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"CPF\">{aluno?.cpf}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Dieta\">{aluno?.dieta}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Doença Família\">{aluno?.doencaFamilia}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Doença Pessoal\">{aluno?.doencaPessoal}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Dor no Corpo\">{aluno?.dorNoCorpo}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Data de Nascimento\">{aluno?.dtNascimento}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"E-mail\">{aluno?.email}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Endereço\">{aluno?.endereco}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Etnia\">{aluno?.etnia}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Fumante\">{aluno?.fumante}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Medicamento\">{aluno?.medicamento}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Objetivo\">{aluno?.objetivo}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Observações\">{aluno?.observacoes}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Osteomuscular\">{aluno?.osteomuscular}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Outro\">{aluno?.outro}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Responsável\">{aluno?.responsavel}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Restrição\">{aluno?.restricao}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"RG\">{aluno?.rg}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Segundo Telefone\">{aluno?.segundoTelefone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Sexo\">{aluno?.sexo}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Telefone\">{aluno?.telefone}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"UF\">{aluno?.uf}</Descriptions.Item>\r\n                </Descriptions>\r\n            </Modal>\r\n        </Spin>\r\n    )\r\n}","import { Input, Table, Spin, message } from 'antd';\nimport React from 'react';\nimport { ListaAlunos, carregarTabela, procurarAlunos } from './actions';\nimport { ColunasPesquisa } from './columns';\nimport { Detalhes } from '../Detalhes';\n\nconst { Search } = Input;\n\nexport const ProcurarAluno = () => {\n\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [listaAlunos, setListaAlunos] = React.useState<ListaAlunos[]>([]);\n  const [modalVisible, setModalVisible] = React.useState<boolean>(false);\n  const [selectedCpf, setSelectedCpf] = React.useState<string>('');\n\n  const handleOnSearch = (value: any) => {\n    setLoading(true);\n    procurarAlunos(value)\n      .then((resposta) => {\n        setListaAlunos(resposta);\n      })\n      .catch((error) => {\n        setListaAlunos([]);\n        message.error(\"Erro inesperado.\");\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }\n\n  const handleRowClick = (cpf: string) => {\n    setSelectedCpf(cpf);\n    showModal(true);\n  }\n\n  const showModal = (visible: boolean) => {\n    setModalVisible(visible);\n  }\n\n  React.useEffect(() => {\n    setLoading(true);\n    carregarTabela()\n      .then((resposta) => {\n        setListaAlunos(resposta);\n      })\n      .catch((error) => {\n        message.error(\"Erro inesperado.\");\n        setListaAlunos([]);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }, []);\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <Search\n          placeholder=\"Pesquisar\"\n          onSearch={handleOnSearch}\n          enterButton\n          style={{ width: 200 }}\n        />\n        <Table\n          onRow={(record) => ({\n            onClick: () => {\n              handleRowClick(record.cpf);\n            },\n          })}\n          dataSource={listaAlunos}\n          columns={ColunasPesquisa()}\n          rowKey='cpf'\n        />\n      </Spin>\n      <Detalhes\n        showModal={showModal}\n        modalVisible={modalVisible}\n        cpf={selectedCpf}\n      />\n    </>\n  );\n}","import { Tabs } from \"antd\";\nimport React from 'react';\nimport { CadastrarAluno } from './CadastrarAluno';\nimport { ProcurarAluno } from './ProcurarAluno';\n\nconst { TabPane } = Tabs;\n\nexport default function Alunos() {\n    return (\n        <Tabs type=\"card\">\n            <TabPane tab=\"Cadastrar\" key=\"1\">\n                <CadastrarAluno />\n            </TabPane>\n            <TabPane tab=\"Procurar\" key=\"2\">\n                <ProcurarAluno />\n            </TabPane>\n        </Tabs>\n    )\n}","import * as Observable from 'rxjs';\r\nimport { endpointFinancas } from 'api';\r\n\r\nexport interface ListaFinanca {\r\n    id: string,\r\n    descricao: string\r\n    tipo: string,\r\n    valor: number,\r\n    status: string,\r\n}\r\n\r\nexport function carregarTabela() {\r\n    return Observable.defer(() => doCarregarTabela()).toPromise();\r\n}\r\n\r\nasync function doCarregarTabela() {\r\n    const result = await endpointFinancas.get('/listar');\r\n    return result.data.map(( r: ListaFinanca ) => {\r\n        return {\r\n            id: r.id,\r\n            descricao: r.descricao,\r\n            tipo: r.tipo,\r\n            valor: r.valor,\r\n            status: r.status,\r\n        } as ListaFinanca;\r\n    }) as ListaFinanca[];\r\n}","import React from 'react';\nimport { Table, Input, Spin, message } from 'antd';\nimport { ColunasFinancas } from './columns';\nimport { ListaFinanca, carregarTabela } from './actions';\n\nconst { Search } = Input;\n\nexport const TabelaFinancas = () => {\n\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [dataSource, setDataSource] = React.useState<ListaFinanca[]>([]);\n\n  React.useEffect(() => {\n    setLoading(true);\n    carregarTabela()\n    .then((resposta) => {\n      setDataSource(resposta);\n    })\n    .catch((erro) => {\n      console.log(erro);\n      message.error(\"Erro inesperado.\");\n    });\n    setLoading(false);\n  }, []);\n\n  return (\n    <>\n      <Search\n        placeholder=\"Pesquisar\"\n        onSearch={value => console.log(value)}\n        style={{ width: 200 }}\n      />\n      <Spin spinning={loading}>\n        <Table\n          dataSource={dataSource}\n          columns={ColunasFinancas()}\n        />\n      </Spin>\n    </>\n  );\n}","import { ColumnProps } from \"antd/lib/table\";\r\n\r\nexport const ColunasFinancas: () => ColumnProps<any>[] = () => {\r\n    return [\r\n        {\r\n            title: 'Descrição',\r\n            dataIndex: 'descricao',\r\n            key: 'descricao',\r\n        },\r\n        {\r\n            title: 'Tipo',\r\n            dataIndex: 'tipo',\r\n            key: 'tipo',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n            key: 'valor',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            align: 'center',\r\n        }\r\n    ]\r\n};","import { Input, Table, Radio } from 'antd';\nimport React from 'react';\n\nconst { Search } = Input;\n\nconst dataSource = [\n    {\n      key: '1',\n      nome: 'Aluno X',\n      status: 'Aberto',\n      valor: 'R$400,00',\n      contrato: 'Premium 1',\n      vencimento: '15/04/2020',\n    },\n    {\n        key: '2',\n        nome: 'Aluno Y',\n        status: 'Adiantado',\n        valor: 'R$250,00',\n        contrato: 'Simples 1',\n        vencimento: '15/06/2020',\n      },\n      {\n        key: '3',\n        nome: 'Aluno Z',\n        status: 'Atrasado',\n        valor: 'R$320,00',\n        contrato: 'Simples 1',\n        vencimento: '15/02/2020',\n      },\n      {\n        key: '4',\n        nome: 'Aluno Z',\n        status: 'Atrasado',\n        valor: 'R$290,00',\n        contrato: 'Simples 1',\n        vencimento: '15/03/2020',\n      },\n  ];\n  \n  const columns = [\n    {\n      title: 'Nome',\n      dataIndex: 'nome',\n      key: 'nome',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n    },\n    {\n        title: 'Valor',\n        dataIndex: 'valor',\n        key: 'valor',\n      },\n      {\n        title: 'Contrato',\n        dataIndex: 'contrato',\n        key: 'contrato',\n      },\n      {\n        title: 'Vencimento',\n        dataIndex: 'vencimento',\n        key: 'vencimento',\n      },\n  ];\n  \n  \n  export const TabelaMensalidades = () => {\n      return (\n        <>\n            <Search\n                placeholder=\"Pesquisar\"\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n            />\n            <Radio.Group>\n                <Radio value={1}>Tudo</Radio>\n                <Radio value={2}>Pago</Radio>\n                <Radio value={3}>Atrasado</Radio>\n                <Radio value={4}>Aberto</Radio>\n            </Radio.Group>\n            <Table\n                dataSource={dataSource}\n                columns={columns}\n            />\n            <p>Total: R$1260,00</p>\n        </>\n    );\n}","import { Tabs } from \"antd\";\nimport React from 'react';\nimport { TabelaFinancas } from \"./TabelaFinancas\";\nimport { TabelaMensalidades } from \"./TabelaMensalidades\";\n\nconst { TabPane } = Tabs;\n\nexport default function Alunos() {\n    return (\n        <Tabs type=\"card\">\n            <TabPane tab=\"Finanças\" key=\"1\">\n                <TabelaFinancas />\n            </TabPane>\n            <TabPane tab=\"Mensalidades\" key=\"2\">\n                <TabelaMensalidades />\n            </TabPane>\n        </Tabs>\n    )\n}","import React from 'react';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport { Row, Col } from 'antd';\n\nconst datadois = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'My First dataset',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }\n    ]\n  };\n\nconst data = {\n\tlabels: [\n\t\t'Red',\n\t\t'Green',\n\t\t'Yellow'\n\t],\n\tdatasets: [{\n\t\tdata: [300, 50, 100],\n\t\tbackgroundColor: [\n\t\t'#FF6384',\n\t\t'#36A2EB',\n\t\t'#FFCE56'\n\t\t],\n\t\thoverBackgroundColor: [\n\t\t'#FF6384',\n\t\t'#36A2EB',\n\t\t'#FFCE56'\n\t\t]\n\t}]\n};\n\nexport default function Home() {\n    return(\n        <>\n            <h1>tela inicial</h1>\n            <Row>\n                <Col>\n                    <Doughnut data={data} />\n                </Col>\n                <Col>\n                    <Line data={data} />\n                </Col>\n            </Row>\n        </>\n    )\n}","export const columns = [\r\n    // {\r\n    //     title: 'Id',\r\n    //     dataIndex: 'id',\r\n    //     key: 'id',\r\n    // },\r\n    {\r\n        title: 'Exercício',\r\n        dataIndex: 'nome',\r\n        key: 'nome',\r\n    },\r\n    {\r\n        title: 'Grupo Muscular',\r\n        dataIndex: 'grupoMuscular',\r\n        key: 'grupoMuscular',\r\n    },\r\n];","import * as Observable from 'rxjs';\r\nimport { endpointExercicios } from 'api';\r\n\r\nexport interface ListaExercicio {\r\n    id: string,\r\n    nome: string\r\n    grupoMuscular: string,\r\n}\r\n\r\nexport function carregarTabela() {\r\n    return Observable.defer(() => doCarregarTabela()).toPromise();\r\n}\r\n\r\nasync function doCarregarTabela() {\r\n    const result = await endpointExercicios.get('/listar');\r\n    return result.data.map(( r: ListaExercicio ) => {\r\n        return {\r\n            id: r.id,\r\n            nome: r.nome,\r\n            grupoMuscular: r.grupoMuscular,\r\n        } as ListaExercicio;\r\n    }) as ListaExercicio[];\r\n}\r\n\r\nexport function procurarExercicio(param: string) {\r\n    return Observable.defer(() => doProcurarExercicio(param)).toPromise();\r\n}\r\n\r\nasync function doProcurarExercicio(param: string) {\r\n    const result = await endpointExercicios.post('/listar', param);\r\n    return result.data.map(( r: ListaExercicio ) => {\r\n        return {\r\n            id: r.id,\r\n            nome: r.nome,\r\n            grupoMuscular: r.grupoMuscular,\r\n        } as ListaExercicio;\r\n    }) as ListaExercicio[];\r\n}","import React from 'react';\nimport { Table, Input, Spin, message } from 'antd';\nimport { columns } from './columns';\nimport { carregarTabela, ListaExercicio } from './actions';\n\nconst { Search } = Input;\n\nexport const TabelaExercicios = () => {\n  const [listaExercicio, setListaExercicio] = React.useState<ListaExercicio[]>([]);\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setLoading(true);\n    carregarTabela()\n    .then((resposta) => {\n      setListaExercicio(resposta);\n    })\n    .catch((erro) => {\n      message.error(\"Erro inesperado.\");\n      console.log(erro);\n    })\n    .finally(() => {\n      setLoading(false);\n    })\n  }, [])\n\n  return (\n    <>\n      <Search\n        placeholder=\"Pesquisar\"\n        onSearch={value => console.log(value)}\n        style={{ width: 200 }}\n      />\n      <Spin spinning={loading}>\n        <Table\n          dataSource={listaExercicio}\n          columns={columns}\n          rowKey='id'\n        />\n      </Spin>\n    </>\n  );\n}","import { Form, Input, InputNumber, Select } from 'antd';\nimport React from 'react';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nexport default function CamposExercicio() {\n    return (\n        <>\n            <Form.Item name=\"nome\" label=\"Nome\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"descricao\" label=\"Descrição\">\n                <TextArea rows={3} />\n            </Form.Item>\n            <Form.Item name=\"grupoMuscular\" label=\"Grupo Muscular\">\n                <Select defaultValue=\"Panturrilha\" style={{ width: 120 }}>\n                    <Option value=\"exemplo\">Panturrilha</Option>\n                    <Option value=\"ex\">Panturrilha</Option>\n                    <Option value=\"Panturrilha\">Panturrilha</Option>\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"series\" label=\"Séries\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name=\"repeticoes\" label=\"Repetições\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name=\"tempoRepeticoes\" label=\"Tempo Repetições(minutos)\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name=\"carga\" label=\"Carga\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name=\"intervaloSerie\" label=\"Intervalo Séries\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name=\"intervaloFinal\" label=\"Intervalo Final\">\n                <InputNumber />\n            </Form.Item>\n            <Form.Item name=\"linkImagem\" label=\"Link para a imagem\">\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"linkVideo\" label=\"Link para o vídeo\">\n                <Input />\n            </Form.Item>\n        </>\n    );\n}","import * as Observable from 'rxjs';\r\nimport { endpointExercicios } from 'api';\r\n\r\nexport function cadastrarExercicio(values: any) {\r\n    return Observable.defer(() => doCadastrarExercicio(values)).toPromise();\r\n}\r\n\r\nasync function doCadastrarExercicio(values: any) {\r\n    const result = await endpointExercicios.post('', values);\r\n    return result;\r\n}","import React from \"react\"\r\nimport CamposExercicio from \"components/fields/CamposExercicio\"\r\nimport { Button, message, Form } from \"antd\"\r\nimport { cadastrarExercicio } from \"./actions\"\r\n\r\nexport const CadastrarExercio = () => {\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: any) => {\r\n        cadastrarExercicio(values)\r\n        .then(() => {\r\n            form.resetFields();\r\n            message.success(\"Exercício cadastrado.\");\r\n        })\r\n        .catch(() => {\r\n            message.error(\"Erro inesperado ao realizar cadastro.\");\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Form\r\n        onFinish={onFinish}\r\n        >\r\n            <CamposExercicio />\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Cadastrar\r\n            </Button>\r\n        </Form>\r\n    )\r\n}","import { Tabs } from \"antd\";\nimport React from 'react';\nimport { TabelaExercicios } from \"./TabelaExercios\";\nimport { CadastrarExercio } from \"./Cadastrar\";\n\nconst { TabPane } = Tabs;\n\nexport const Exercicios = () => {\n    return (\n        <Tabs type=\"card\">\n            <TabPane tab=\"Cadastrar\" key=\"1\">\n                <CadastrarExercio />\n            </TabPane>\n            <TabPane tab=\"Procurar\" key=\"2\">\n                <TabelaExercicios />\n            </TabPane>\n        </Tabs>\n    )\n}","import * as Observable from 'rxjs';\r\nimport { endpointExercicios } from 'api';\r\n\r\nexport interface ListaGrupoMuscular {\r\n    id: number;\r\n    nome: string;\r\n}\r\n\r\nexport function carregarGruposMusculares() {\r\n    return Observable.defer(() => doCarregarGruposMusculares()).toPromise();\r\n}\r\n\r\nasync function doCarregarGruposMusculares() {\r\n    const result = await endpointExercicios.get('/grupomuscular/listar');\r\n    return result.data.map((r: ListaGrupoMuscular) => {\r\n        return {\r\n            id: r.id,\r\n            nome: r.nome,\r\n        } as ListaGrupoMuscular\r\n    }) as ListaGrupoMuscular[];\r\n}","import * as Observable from 'rxjs';\r\nimport { endpointExercicios } from 'api';\r\n\r\nexport function salvaGrupoMuscular(id: number | null, nome: string) {\r\n    return Observable.defer(() => doSalvaGrupoMuscular(id, nome)).toPromise();\r\n}\r\n\r\nasync function doSalvaGrupoMuscular(id: number | null, nome: string) {\r\n    const result =  await endpointExercicios.post('/grupomuscular', {id, nome});\r\n    return result.data;\r\n}","import React from \"react\";\r\nimport { Modal, Spin, Form, Input, Button, message } from \"antd\";\r\nimport { salvaGrupoMuscular } from \"./actions\";\r\n\r\nexport interface InjectedProps {\r\n    showModal: (visible: boolean) => void;\r\n    modalVisible: boolean;\r\n    id: number | null;\r\n    nome: string;\r\n}\r\n\r\nexport const ModalGrupoMuscular = (props: InjectedProps) => {\r\n    const [loading, setLoading] = React.useState<boolean>(false);\r\n    const [textoBotao, setTextoBotao] = React.useState<string>('');\r\n\r\n    React.useEffect(() => {\r\n        if(props.id == null) {\r\n            setTextoBotao('Salvar');\r\n        } else {\r\n            setTextoBotao('Atualizar');\r\n        }\r\n    }, [props.id]);\r\n\r\n    const handleFormFinish = (value: any) => {\r\n        setLoading(true);\r\n        salvaGrupoMuscular(props.id, value.nome)\r\n        .then(() => {\r\n            message.success('Operação realizada.')\r\n        })\r\n        .catch(() => {\r\n            message.error('Erro inesperado.');\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Spin spinning={loading}>\r\n            <Modal\r\n                visible={props.modalVisible}\r\n                onCancel={() => props.showModal(false)}\r\n            >\r\n                <Form\r\n                    onFinish={handleFormFinish}>\r\n                    <Form.Item name='nome' label='nome' rules={[{ required: true }]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        {textoBotao}\r\n                    </Button>\r\n                </Form>\r\n            </Modal>\r\n        </Spin>\r\n    )\r\n}","import { Table, message, Spin, Button } from 'antd';\r\nimport * as React from 'react';\r\nimport { carregarGruposMusculares, ListaGrupoMuscular } from './actions';\r\nimport { colunasExercicio } from './columns';\r\nimport { ModalGrupoMuscular } from './ModalGrupoMuscular';\r\n\r\nexport const GruposMusculares = () => {\r\n    const [loading, setLoading] = React.useState<boolean>(false);\r\n    const [gruposMusculares, setGruposMusculares] = React.useState<ListaGrupoMuscular[]>([]);\r\n    const [modalVisible, setModalVisible] = React.useState<boolean>(false);\r\n    const [id, setId] = React.useState<number | null>(null);\r\n    const [nome, setNome] = React.useState<string>('');\r\n\r\n    const handleRowClick = (idValue: number, nomeValue: string) => {\r\n        setId(idValue);\r\n        setNome(nomeValue);\r\n        showModal(true);\r\n    }\r\n\r\n    const handleOnClickCadastrarNovo = () => {\r\n        setId(null);\r\n        setNome('');\r\n        showModal(true);\r\n    }\r\n\r\n    const showModal = (visible: boolean) => {\r\n        setModalVisible(visible);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true);\r\n        carregarGruposMusculares()\r\n            .then((resposta) => {\r\n                setGruposMusculares(resposta);\r\n            })\r\n            .catch((erro) => {\r\n                message.error(\"Erro ao carregar dados.\");\r\n                console.log(erro);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={handleOnClickCadastrarNovo}>\r\n                Cadastrar Novo\r\n            </Button>\r\n            <Spin spinning={loading}>\r\n                <Table\r\n                    dataSource={gruposMusculares}\r\n                    columns={colunasExercicio()}\r\n                    onRow={(record) => ({\r\n                        onClick: () => {\r\n                            handleRowClick(record.id, record.nome);\r\n                        },\r\n                    })}\r\n                />\r\n            </Spin>\r\n            <ModalGrupoMuscular\r\n                showModal={showModal}\r\n                modalVisible={modalVisible}\r\n                id={id}\r\n                nome={nome} />\r\n        </>\r\n    );\r\n}","import { ColumnProps } from \"antd/lib/table\";\r\n\r\nexport const colunasExercicio: () => ColumnProps<any>[] = () => {\r\n    return [\r\n        {\r\n            title: \"Nome\",\r\n            dataIndex: 'nome',\r\n            key: 'nome',\r\n        },\r\n    ];\r\n}","import React from \"react\"\r\nimport { Tabs } from \"antd\"\r\nimport { GruposMusculares } from './GruposMusculares'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport const Gerenciamento = () => {\r\n    return (\r\n        <Tabs type=\"card\">\r\n            <TabPane tab=\"Campos Predefinidos\" key=\"1\">\r\n                <GruposMusculares />\r\n            </TabPane>\r\n        </Tabs>\r\n    )\r\n}","import React from 'react';\nimport Alunos from \"../pages/Alunos\";\nimport Financas from \"../pages/Financas\";\nimport Home from \"../pages/Home\";\nimport { Switch, Route } from 'react-router-dom';\nimport { Exercicios } from '../pages/Exercicios';\nimport { Gerenciamento } from 'pages/Gerenciamento';\n\nexport const Conteudo = () => {\n    return (\n        <div\n            className=\"card-container\"\n            style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }}\n        >\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home/>} />\n                <Route path=\"/alunos\" render={() => <Alunos />} />\n                <Route path=\"/financas\" render={() => <Financas />} />\n                <Route path=\"/exercicios\" render={() => <Exercicios />} />\n                <Route path=\"/gerenciamento\" render={() => <Gerenciamento />} />\n            </Switch>\n        </div>\n    )\n}","import { Layout } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport { MenuLateral } from './components/MenuLateral';\nimport { Conteudo } from './components/Conteudo';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst { Content, Sider } = Layout;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Sider\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'fixed',\n              left: 0,\n            }}\n          >\n            <MenuLateral />\n          </Sider>\n          <Layout\n            style={{ marginLeft: 200 }}>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                margin: 0,\n                minHeight: \"100vh\",\n              }}\n            >\n              <Conteudo />\n            </Content>\n          </Layout>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}